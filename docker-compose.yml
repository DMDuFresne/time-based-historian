# ----------------------------------------------------------------------------------------------------
# Portainer Template for Timebase Infrastructure
# Includes Timebase Historian, Explorer, Collector, Node-RED, and Mosquitto MQTT Broker
# ----------------------------------------------------------------------------------------------------
# References:
# - https://timebase.flow-software.com/en/knowledge-base/start-here
# - https://github.com/node-red/node-red
# - https://mosquitto.org/
# ----------------------------------------------------------------------------------------------------

services:

  # Timebase Historian Service
  timebase-historian:
    image: timebase/historian:${HISTORIAN_TAG:-latest}                            # Docker image for Timebase Historian with variable tag
    hostname: ${HISTORIAN_HOSTNAME:-historian}                                    # Hostname used for internal networking
    container_name: ${HISTORIAN_CONTAINER_NAME:-historian}                        # Container name for easier management
    ports:
      - "${HISTORIAN_PORT:-4511}:4511"                                            # Map the Historian REST API port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    environment:
      - Settings=/historian/settings                                              # Path to the settings file
      - Data=/historian/data                                                      # Path to the data directory
      - Logs=/historian/logs                                                      # Path to the logs directory
    volumes:
      - /portainer/Files/AppData/Config/timebase/historian:/historian
    networks:
      - timebase-network                                                          # Connect to the shared application network

  # Timebase Collector Service
  timebase-collector:
    image: timebase/collector:${COLLECTOR_TAG:-latest}                            # Docker image for Timebase Collector with variable tag
    hostname: ${COLLECTOR_HOSTNAME:-collector}                                    # Hostname used for internal networking
    container_name: ${COLLECTOR_CONTAINER_NAME:-collector}                        # Container name for easier management
    ports:
      - "${COLLECTOR_PORT:-4521}:4521"                                            # Map the Collector REST API port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    depends_on:
      - timebase-historian                                                        # Ensure this service starts after the Historian
    environment:
      - Active=false                                                              # Set the initial state of the Collector service
      - Settings=/collector/settings                                              # Path to the settings file
      - Config=/collector/config                                                  # Path to the config directory
      - Data=/collector/data                                                      # Path to the data directory
      - Logs=/collector/logs                                                      # Path to the logs directory
    volumes:
      - /portainer/Files/AppData/Config/timebase/collector:/collector
    networks:
      - timebase-network                                                          # Connect to the shared application network

  # Timebase Explorer Service
  timebase-explorer:
    image: timebase/explorer:${EXPLORER_TAG:-latest}                              # Docker image for Timebase Explorer with variable tag
    hostname: ${EXPLORER_HOSTNAME:-explorer}                                      # Hostname used for internal networking
    container_name: ${EXPLORER_CONTAINER_NAME:-explorer}                          # Container name for easier management
    ports:
      - "${EXPLORER_PORT:-4531}:4531"                                             # Map the Explorer Web UI port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    depends_on:
      - timebase-historian                                                        # Ensure this service starts after the Historian
    environment:
      - Settings=/explorer/settings                                               # Path to the settings file
      - Config=/explorer/config                                                   # Path to the config directory
      - Data=/explorer/data                                                       # Path to the data directory
      - Logs=/explorer/logs                                                       # Path to the logs directory
    volumes:
      - /portainer/Files/AppData/Config/timebase/explorer:/explorer
    networks:
      - timebase-network                                                          # Connect to the shared application network

  # Node-RED Service
  node-red:
    image: nodered/node-red:${NODERED_TAG:-latest}                                # Docker image for Node-RED with variable tag
    hostname: ${NODERED_HOSTNAME:-node-red}                                       # Hostname used for internal networking
    container_name: ${NODERED_CONTAINER_NAME:-node-red}                           # Container name for easier management
    ports:
      - "${NODERED_PORT:-1880}:1880"                                              # Map the Node-RED Web UI port
    restart: unless-stopped                                                       # Automatically restart unless stopped manually
    depends_on:
      - mqtt-broker                                                               # Ensure this service starts after MQTT Broker
    volumes:
      - node-red-data:/data                   # Bind mount for Node-RED data
    networks:
      - timebase-network                                                          # Connect to the shared application network

  # Mosquitto MQTT Broker Service
  mqtt-broker:
    image: eclipse-mosquitto:${MOSQUITTO_TAG:-latest}                              # Docker image for Mosquitto MQTT Broker
    hostname: ${MOSQUITTO_HOSTNAME:-broker}                                        # Hostname used for internal networking
    container_name: ${MOSQUITTO_CONTAINER_NAME:-mosquitto}                         # Container name for easier management
    ports:
      - "${MOSQUITTO_MQTT_PORT:-1883}:1883"                                        # Map the MQTT port
    restart: unless-stopped                                                        # Automatically restart unless stopped manually
    command: |
      sh -c "
      echo 'listener 1883 0.0.0.0
      allow_anonymous true
      log_type error
      log_type warning
      log_type notice
      log_type information
      persistence true
      persistence_location /mosquitto/data/' > /mosquitto/config/mosquitto.conf &&
      mosquitto -c /mosquitto/config/mosquitto.conf
      "
    volumes:
      - /portainer/Files/AppData/Config/timebase/mosquitto/config:/mosquitto/config  # Bind mount for config
      - /portainer/Files/AppData/Config/timebase/mosquitto/data:/mosquitto/data      # Bind mount for data
      - /portainer/Files/AppData/Config/timebase/mosquitto/log:/mosquitto/log        # Bind mount for logs
    networks:
      - timebase-network                                                           # Connect to the shared application network

volumes:
  node-red-data:

# Dedicated network for service communication
networks:
  timebase-network:
    name: timebase-network
    driver: bridge
